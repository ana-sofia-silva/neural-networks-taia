# load dogs vs cats dataset, reshape and add noise, save to two folders (cats and dogs)
from os import listdir
from os import mkdir
import numpy as np
from keras.preprocessing.image import load_img
from keras.preprocessing.image import img_to_array
from PIL import Image

def noisy(image):
    mean=0
    var=0.001
    image = np.array(image/255, dtype=float)
    noise = np.random.normal(mean, var ** 0.5, image.shape)
    noise2 = np.random.normal(mean, var ** 0.5, image.shape)
    out = image - noise
    if out.min() < 0:
        low_clip = -1
        up_clip = 1
    else:
        low_clip = 0
        up_clip = 1
    out = np.clip(out, low_clip, up_clip)
    out = np.uint8(out*255)
    return out

#make directories
mkdir("n_dataset_dogs_vs_cats/")
mkdir("n_dataset_dogs_vs_cats/train/")
mkdir("n_dataset_dogs_vs_cats/train/cats")
mkdir("n_dataset_dogs_vs_cats/train/dogs")

photos = list()

folder = 'dataset_dogs_vs_cats/train/cats/'
for file in listdir(folder):
	# load image
	photo = load_img(folder + file, target_size=(200, 200))
	photo.save("n_dataset_dogs_vs_cats/train/cats/" + file)
	# convert to numpy array
	photo = img_to_array(photo)
	photo = noisy(photo)
	im = Image.fromarray(photo)
	im.save("n_dataset_dogs_vs_cats/train/cats/n_" + file)

folder = 'dataset_dogs_vs_cats/train/dogs/'
for file in listdir(folder):
	# load image
	photo = load_img(folder + file, target_size=(200, 200))
	photo.save("n_dataset_dogs_vs_cats/train/dogs/" + file)
	# convert to numpy array
	photo = img_to_array(photo)
	photo = noisy(photo)
	im = Image.fromarray(photo)
	im.save("n_dataset_dogs_vs_cats/train/dogs/n_" + file)
